//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmallLabyPlayer.ServiceRefSmallLaby {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovementStrategy", Namespace="http://schemas.datacontract.org/2004/07/SmallLabyServer")]
    public enum MovementStrategy : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StandStill = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoveLeft = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoveRight = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoveUp = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MoveDown = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RandomDirection = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRefSmallLaby.ISmallLaby")]
    public interface ISmallLaby {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/AddPlayer", ReplyAction="http://tempuri.org/ISmallLaby/AddPlayerResponse")]
        int AddPlayer(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/AddPlayer", ReplyAction="http://tempuri.org/ISmallLaby/AddPlayerResponse")]
        System.Threading.Tasks.Task<int> AddPlayerAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/RemovePlayer", ReplyAction="http://tempuri.org/ISmallLaby/RemovePlayerResponse")]
        void RemovePlayer(int player_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/RemovePlayer", ReplyAction="http://tempuri.org/ISmallLaby/RemovePlayerResponse")]
        System.Threading.Tasks.Task RemovePlayerAsync(int player_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/GetMap", ReplyAction="http://tempuri.org/ISmallLaby/GetMapResponse")]
        int[] GetMap();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/GetMap", ReplyAction="http://tempuri.org/ISmallLaby/GetMapResponse")]
        System.Threading.Tasks.Task<int[]> GetMapAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/GetMapWidth", ReplyAction="http://tempuri.org/ISmallLaby/GetMapWidthResponse")]
        int GetMapWidth();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/GetMapWidth", ReplyAction="http://tempuri.org/ISmallLaby/GetMapWidthResponse")]
        System.Threading.Tasks.Task<int> GetMapWidthAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/GetMapHeight", ReplyAction="http://tempuri.org/ISmallLaby/GetMapHeightResponse")]
        int GetMapHeight();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/GetMapHeight", ReplyAction="http://tempuri.org/ISmallLaby/GetMapHeightResponse")]
        System.Threading.Tasks.Task<int> GetMapHeightAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/GetPosition", ReplyAction="http://tempuri.org/ISmallLaby/GetPositionResponse")]
        SmallLabyPlayer.ServiceRefSmallLaby.GetPositionResponse GetPosition(SmallLabyPlayer.ServiceRefSmallLaby.GetPositionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/GetPosition", ReplyAction="http://tempuri.org/ISmallLaby/GetPositionResponse")]
        System.Threading.Tasks.Task<SmallLabyPlayer.ServiceRefSmallLaby.GetPositionResponse> GetPositionAsync(SmallLabyPlayer.ServiceRefSmallLaby.GetPositionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/SetPosition", ReplyAction="http://tempuri.org/ISmallLaby/SetPositionResponse")]
        void SetPosition(int player_id, int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/SetPosition", ReplyAction="http://tempuri.org/ISmallLaby/SetPositionResponse")]
        System.Threading.Tasks.Task SetPositionAsync(int player_id, int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/SetMovementStrategy", ReplyAction="http://tempuri.org/ISmallLaby/SetMovementStrategyResponse")]
        void SetMovementStrategy(int player_id, SmallLabyPlayer.ServiceRefSmallLaby.MovementStrategy strategy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmallLaby/SetMovementStrategy", ReplyAction="http://tempuri.org/ISmallLaby/SetMovementStrategyResponse")]
        System.Threading.Tasks.Task SetMovementStrategyAsync(int player_id, SmallLabyPlayer.ServiceRefSmallLaby.MovementStrategy strategy);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPosition", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPositionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int player_id;
        
        public GetPositionRequest() {
        }
        
        public GetPositionRequest(int player_id) {
            this.player_id = player_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPositionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPositionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int x;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int y;
        
        public GetPositionResponse() {
        }
        
        public GetPositionResponse(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmallLabyChannel : SmallLabyPlayer.ServiceRefSmallLaby.ISmallLaby, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmallLabyClient : System.ServiceModel.ClientBase<SmallLabyPlayer.ServiceRefSmallLaby.ISmallLaby>, SmallLabyPlayer.ServiceRefSmallLaby.ISmallLaby {
        
        public SmallLabyClient() {
        }
        
        public SmallLabyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmallLabyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmallLabyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmallLabyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddPlayer(string name) {
            return base.Channel.AddPlayer(name);
        }
        
        public System.Threading.Tasks.Task<int> AddPlayerAsync(string name) {
            return base.Channel.AddPlayerAsync(name);
        }
        
        public void RemovePlayer(int player_id) {
            base.Channel.RemovePlayer(player_id);
        }
        
        public System.Threading.Tasks.Task RemovePlayerAsync(int player_id) {
            return base.Channel.RemovePlayerAsync(player_id);
        }
        
        public int[] GetMap() {
            return base.Channel.GetMap();
        }
        
        public System.Threading.Tasks.Task<int[]> GetMapAsync() {
            return base.Channel.GetMapAsync();
        }
        
        public int GetMapWidth() {
            return base.Channel.GetMapWidth();
        }
        
        public System.Threading.Tasks.Task<int> GetMapWidthAsync() {
            return base.Channel.GetMapWidthAsync();
        }
        
        public int GetMapHeight() {
            return base.Channel.GetMapHeight();
        }
        
        public System.Threading.Tasks.Task<int> GetMapHeightAsync() {
            return base.Channel.GetMapHeightAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SmallLabyPlayer.ServiceRefSmallLaby.GetPositionResponse SmallLabyPlayer.ServiceRefSmallLaby.ISmallLaby.GetPosition(SmallLabyPlayer.ServiceRefSmallLaby.GetPositionRequest request) {
            return base.Channel.GetPosition(request);
        }
        
        public int GetPosition(int player_id, out int y) {
            SmallLabyPlayer.ServiceRefSmallLaby.GetPositionRequest inValue = new SmallLabyPlayer.ServiceRefSmallLaby.GetPositionRequest();
            inValue.player_id = player_id;
            SmallLabyPlayer.ServiceRefSmallLaby.GetPositionResponse retVal = ((SmallLabyPlayer.ServiceRefSmallLaby.ISmallLaby)(this)).GetPosition(inValue);
            y = retVal.y;
            return retVal.x;
        }
        
        public System.Threading.Tasks.Task<SmallLabyPlayer.ServiceRefSmallLaby.GetPositionResponse> GetPositionAsync(SmallLabyPlayer.ServiceRefSmallLaby.GetPositionRequest request) {
            return base.Channel.GetPositionAsync(request);
        }
        
        public void SetPosition(int player_id, int x, int y) {
            base.Channel.SetPosition(player_id, x, y);
        }
        
        public System.Threading.Tasks.Task SetPositionAsync(int player_id, int x, int y) {
            return base.Channel.SetPositionAsync(player_id, x, y);
        }
        
        public void SetMovementStrategy(int player_id, SmallLabyPlayer.ServiceRefSmallLaby.MovementStrategy strategy) {
            base.Channel.SetMovementStrategy(player_id, strategy);
        }
        
        public System.Threading.Tasks.Task SetMovementStrategyAsync(int player_id, SmallLabyPlayer.ServiceRefSmallLaby.MovementStrategy strategy) {
            return base.Channel.SetMovementStrategyAsync(player_id, strategy);
        }
    }
}
